{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../src/base83.ts","../../../src/utils.ts","../../../src/error.ts","../../../src/decode.ts","../../src/BlurhashCanvas.tsx","../../src/Blurhash.tsx","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/memoize-one/dist/memoize-one.esm.js","../../src/timer.js","../../src/domHelpers.js","../../src/createGridComponent.js","../../src/createListComponent.js","../../src/FixedSizeList.js","../node_modules/antd/es/badge/SingleNumber.js","../node_modules/antd/es/badge/ScrollNumber.js","../node_modules/antd/es/badge/utils.js","../node_modules/antd/es/badge/Ribbon.js","../node_modules/antd/es/badge/index.js","../node_modules/antd/es/tag/CheckableTag.js","../node_modules/antd/es/tag/index.js","../node_modules/@ant-design/icons-svg/es/asn/BarChartOutlined.js","../node_modules/@ant-design/icons/es/icons/BarChartOutlined.js"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","digitCharacters","sRGBToLinear","value","linearTosRGB","Error","Math","floor","_inheritsLoose","subClass","superClass","create","constructor","__proto__","safeIsNaN","Number","isNaN","areInputsEqual","newInputs","lastInputs","first","second","memoizeOne","resultFn","isEqual","lastThis","lastResult","lastArgs","calledOnce","newArgs","_i","arguments","this","apply","now","performance","Date","cancelTimeout","timeoutID","cancelAnimationFrame","requestTimeout","callback","start","id","requestAnimationFrame","cachedRTLResult","getRTLOffsetType","recalculate","outerDiv","document","outerStyle","innerDiv","innerStyle","defaultItemKey","index","createListComponent","getItemOffset","getEstimatedTotalSize","getItemSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","_instanceProps","_outerRef","_resetIsScrollingTimeoutId","state","instance","isScrolling","scrollDirection","scrollOffset","scrollUpdateWasRequested","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","direction","itemSize","layout","itemStyleCache","style","offset","size","isHorizontal","isRtl","offsetHorizontal","position","left","undefined","right","top","height","width","event","clientWidth","scrollLeft","scrollWidth","prevState","clientHeight","scrollHeight","scrollTop","outerRef","validateSharedProps","nextProps","align","itemCount","initialScrollOffset","children","className","innerRef","innerElementType","innerTagName","itemData","itemKey","outerElementType","outerTagName","useIsScrolling","onScroll","startIndex","stopIndex","items","createElement","data","_getItemStyle","estimatedTotalSize","ref","overflow","WebkitOverflowScrolling","willChange","pointerEvents","props","overscanCount","overscanBackward","overscanForward","FixedSizeList","lastItemOffset","maxOffset","minOffset","middleOffset","numVisibleItems","UnitNumber","_ref","prefixCls","current","_ref$offset","concat","React","classNames","getOffset","end","unit","SingleNumber","unitNodes","offsetStyle","originCount","count","originValue","abs","_React$useState","_React$useState2","_slicedToArray","prevValue","setPrevValue","_React$useState3","_React$useState4","prevCount","setPrevCount","onTransitionEnd","timeout","setTimeout","clearTimeout","_extends","transition","unitNumberList","push","prevIndex","findIndex","n","map","singleUnit","transform","__rest","s","e","t","p","hasOwnProperty","ScrollNumber","_a","customizePrefixCls","motionClassName","title","show","_a$component","component","restProps","getPrefixCls","ConfigContext","newProps","numberNodes","numberList","String","split","num","borderColor","boxShadow","cloneElement","oriProps","isPresetColor","color","PresetColorTypes","Badge","_classNames","_classNames2","customizeScrollNumberPrefixCls","scrollNumberPrefixCls","status","text","_a$count","_a$overflowCount","overflowCount","_a$dot","dot","_a$size","_a$showZero","showZero","_React$useContext","numberedDisplayCount","hasStatus","isZero","showAsDot","mergedCount","isHidden","useMemo","countRef","useRef","livingCount","displayCountRef","displayCount","isDotRef","mergedStyle","marginTop","parseInt","titleNode","statusTextNode","displayNode","_typeof","statusCls","_defineProperty","statusStyle","background","badgeClassName","statusTextColor","CSSMotion","visible","motionName","motionAppear","_classNames3","isDot","scrollNumberCls","toString","scrollNumberStyle","Ribbon","_ref$placement","placement","colorInPreset","ribbonCls","colorStyle","cornerColorStyle","CheckableTag","checked","onChange","onClick","cls","PresetColorRegex","RegExp","join","PresetStatusColorRegex","PresetStatusColorTypes","InternalTag","icon","onClose","closeIcon","_a$closable","closable","setVisible","test","tagStyle","backgroundColor","presetColor","tagClassName","handleCloseClick","stopPropagation","defaultPrevented","isNeedWave","type","tagProps","omit","iconNode","kids","tagNode","CloseOutlined","Wave","Tag","displayName","BarChartOutlined","AntdIcon","_objectSpread","BarChartOutlinedSvg"],"mappings":"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","file":"static/js/9.0601928e.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","const digitCharacters = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"#\",\n    \"$\",\n    \"%\",\n    \"*\",\n    \"+\",\n    \",\",\n    \"-\",\n    \".\",\n    \":\",\n    \";\",\n    \"=\",\n    \"?\",\n    \"@\",\n    \"[\",\n    \"]\",\n    \"^\",\n    \"_\",\n    \"{\",\n    \"|\",\n    \"}\",\n    \"~\"\n];\nexport const decode83 = (str) => {\n    let value = 0;\n    for (let i = 0; i < str.length; i++) {\n        const c = str[i];\n        const digit = digitCharacters.indexOf(c);\n        value = value * 83 + digit;\n    }\n    return value;\n};\nexport const encode83 = (n, length) => {\n    var result = \"\";\n    for (let i = 1; i <= length; i++) {\n        let digit = (Math.floor(n) / Math.pow(83, length - i)) % 83;\n        result += digitCharacters[Math.floor(digit)];\n    }\n    return result;\n};\n//# sourceMappingURL=base83.js.map","export const sRGBToLinear = (value) => {\n    let v = value / 255;\n    if (v <= 0.04045) {\n        return v / 12.92;\n    }\n    else {\n        return Math.pow((v + 0.055) / 1.055, 2.4);\n    }\n};\nexport const linearTosRGB = (value) => {\n    let v = Math.max(0, Math.min(1, value));\n    if (v <= 0.0031308) {\n        return Math.round(v * 12.92 * 255 + 0.5);\n    }\n    else {\n        return Math.round((1.055 * Math.pow(v, 1 / 2.4) - 0.055) * 255 + 0.5);\n    }\n};\nexport const sign = (n) => (n < 0 ? -1 : 1);\nexport const signPow = (val, exp) => sign(val) * Math.pow(Math.abs(val), exp);\n//# sourceMappingURL=utils.js.map","export class ValidationError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"ValidationError\";\n        this.message = message;\n    }\n}\n//# sourceMappingURL=error.js.map","import { decode83 } from \"./base83\";\nimport { sRGBToLinear, signPow, linearTosRGB } from \"./utils\";\nimport { ValidationError } from \"./error\";\n/**\n * Returns an error message if invalid or undefined if valid\n * @param blurhash\n */\nconst validateBlurhash = (blurhash) => {\n    if (!blurhash || blurhash.length < 6) {\n        throw new ValidationError(\"The blurhash string must be at least 6 characters\");\n    }\n    const sizeFlag = decode83(blurhash[0]);\n    const numY = Math.floor(sizeFlag / 9) + 1;\n    const numX = (sizeFlag % 9) + 1;\n    if (blurhash.length !== 4 + 2 * numX * numY) {\n        throw new ValidationError(`blurhash length mismatch: length is ${blurhash.length} but it should be ${4 + 2 * numX * numY}`);\n    }\n};\nexport const isBlurhashValid = (blurhash) => {\n    try {\n        validateBlurhash(blurhash);\n    }\n    catch (error) {\n        return { result: false, errorReason: error.message };\n    }\n    return { result: true };\n};\nconst decodeDC = (value) => {\n    const intR = value >> 16;\n    const intG = (value >> 8) & 255;\n    const intB = value & 255;\n    return [sRGBToLinear(intR), sRGBToLinear(intG), sRGBToLinear(intB)];\n};\nconst decodeAC = (value, maximumValue) => {\n    const quantR = Math.floor(value / (19 * 19));\n    const quantG = Math.floor(value / 19) % 19;\n    const quantB = value % 19;\n    const rgb = [\n        signPow((quantR - 9) / 9, 2.0) * maximumValue,\n        signPow((quantG - 9) / 9, 2.0) * maximumValue,\n        signPow((quantB - 9) / 9, 2.0) * maximumValue\n    ];\n    return rgb;\n};\nconst decode = (blurhash, width, height, punch) => {\n    validateBlurhash(blurhash);\n    punch = punch | 1;\n    const sizeFlag = decode83(blurhash[0]);\n    const numY = Math.floor(sizeFlag / 9) + 1;\n    const numX = (sizeFlag % 9) + 1;\n    const quantisedMaximumValue = decode83(blurhash[1]);\n    const maximumValue = (quantisedMaximumValue + 1) / 166;\n    const colors = new Array(numX * numY);\n    for (let i = 0; i < colors.length; i++) {\n        if (i === 0) {\n            const value = decode83(blurhash.substring(2, 6));\n            colors[i] = decodeDC(value);\n        }\n        else {\n            const value = decode83(blurhash.substring(4 + i * 2, 6 + i * 2));\n            colors[i] = decodeAC(value, maximumValue * punch);\n        }\n    }\n    const bytesPerRow = width * 4;\n    const pixels = new Uint8ClampedArray(bytesPerRow * height);\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            let r = 0;\n            let g = 0;\n            let b = 0;\n            for (let j = 0; j < numY; j++) {\n                for (let i = 0; i < numX; i++) {\n                    const basis = Math.cos((Math.PI * x * i) / width) *\n                        Math.cos((Math.PI * y * j) / height);\n                    let color = colors[i + j * numX];\n                    r += color[0] * basis;\n                    g += color[1] * basis;\n                    b += color[2] * basis;\n                }\n            }\n            let intR = linearTosRGB(r);\n            let intG = linearTosRGB(g);\n            let intB = linearTosRGB(b);\n            pixels[4 * x + 0 + y * bytesPerRow] = intR;\n            pixels[4 * x + 1 + y * bytesPerRow] = intG;\n            pixels[4 * x + 2 + y * bytesPerRow] = intB;\n            pixels[4 * x + 3 + y * bytesPerRow] = 255; // alpha\n        }\n    }\n    return pixels;\n};\nexport default decode;\n//# sourceMappingURL=decode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { decode } from 'blurhash';\nvar BlurhashCanvas = /** @class */ (function (_super) {\n    __extends(BlurhashCanvas, _super);\n    function BlurhashCanvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.canvas = null;\n        _this.handleRef = function (canvas) {\n            _this.canvas = canvas;\n            _this.draw();\n        };\n        _this.draw = function () {\n            var _a = _this.props, hash = _a.hash, height = _a.height, punch = _a.punch, width = _a.width;\n            if (_this.canvas) {\n                var pixels = decode(hash, width, height, punch);\n                var ctx = _this.canvas.getContext('2d');\n                var imageData = ctx.createImageData(width, height);\n                imageData.data.set(pixels);\n                ctx.putImageData(imageData, 0, 0);\n            }\n        };\n        return _this;\n    }\n    BlurhashCanvas.prototype.componentDidUpdate = function () {\n        this.draw();\n    };\n    BlurhashCanvas.prototype.render = function () {\n        var _a = this.props, hash = _a.hash, height = _a.height, width = _a.width, rest = __rest(_a, [\"hash\", \"height\", \"width\"]);\n        return React.createElement(\"canvas\", __assign({}, rest, { height: height, width: width, ref: this.handleRef }));\n    };\n    BlurhashCanvas.defaultProps = {\n        height: 128,\n        width: 128,\n    };\n    return BlurhashCanvas;\n}(React.PureComponent));\nexport default BlurhashCanvas;\n//# sourceMappingURL=BlurhashCanvas.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport BlurhashCanvas from './BlurhashCanvas';\nvar canvasStyle = {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: '100%',\n    height: '100%',\n};\nvar Blurhash = /** @class */ (function (_super) {\n    __extends(Blurhash, _super);\n    function Blurhash() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Blurhash.prototype.componentDidUpdate = function () {\n        if (this.props.resolutionX <= 0) {\n            throw new Error('resolutionX must be larger than zero');\n        }\n        if (this.props.resolutionY <= 0) {\n            throw new Error('resolutionY must be larger than zero');\n        }\n    };\n    Blurhash.prototype.render = function () {\n        var _a = this.props, hash = _a.hash, height = _a.height, width = _a.width, punch = _a.punch, resolutionX = _a.resolutionX, resolutionY = _a.resolutionY, style = _a.style, rest = __rest(_a, [\"hash\", \"height\", \"width\", \"punch\", \"resolutionX\", \"resolutionY\", \"style\"]);\n        return (React.createElement(\"div\", __assign({}, rest, { style: __assign(__assign({ display: 'inline-block', height: height, width: width }, style), { position: 'relative' }) }),\n            React.createElement(BlurhashCanvas, { hash: hash, height: resolutionY, width: resolutionX, punch: punch, style: canvasStyle })));\n    };\n    Blurhash.defaultProps = {\n        height: 128,\n        width: 128,\n        resolutionX: 32,\n        resolutionY: 32,\n    };\n    return Blurhash;\n}(React.PureComponent));\nexport default Blurhash;\n//# sourceMappingURL=Blurhash.js.map","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n","// @flow\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\n\nconst hasNativePerformanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function';\n\nconst now = hasNativePerformanceNow\n  ? () => performance.now()\n  : () => Date.now();\n\nexport type TimeoutID = {|\n  id: AnimationFrameID,\n|};\n\nexport function cancelTimeout(timeoutID: TimeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\n\nexport function requestTimeout(callback: Function, delay: number): TimeoutID {\n  const start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  const timeoutID: TimeoutID = {\n    id: requestAnimationFrame(tick),\n  };\n\n  return timeoutID;\n}\n","// @flow\n\nlet size: number = -1;\n\n// This utility copied from \"dom-helpers\" package.\nexport function getScrollbarSize(recalculate?: boolean = false): number {\n  if (size === -1 || recalculate) {\n    const div = document.createElement('div');\n    const style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n\n    ((document.body: any): HTMLBodyElement).appendChild(div);\n\n    size = div.offsetWidth - div.clientWidth;\n\n    ((document.body: any): HTMLBodyElement).removeChild(div);\n  }\n\n  return size;\n}\n\nexport type RTLOffsetType =\n  | 'negative'\n  | 'positive-descending'\n  | 'positive-ascending';\n\nlet cachedRTLResult: RTLOffsetType | null = null;\n\n// TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\nexport function getRTLOffsetType(recalculate?: boolean = false): RTLOffsetType {\n  if (cachedRTLResult === null || recalculate) {\n    const outerDiv = document.createElement('div');\n    const outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n\n    const innerDiv = document.createElement('div');\n    const innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n\n    outerDiv.appendChild(innerDiv);\n\n    ((document.body: any): HTMLBodyElement).appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    ((document.body: any): HTMLBodyElement).removeChild(outerDiv);\n\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getScrollbarSize, getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\ntype Direction = 'ltr' | 'rtl';\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n\ntype RenderComponentProps<T> = {|\n  columnIndex: number,\n  data: T,\n  isScrolling?: boolean,\n  rowIndex: number,\n  style: Object,\n|};\nexport type RenderComponent<T> = React$ComponentType<\n  $Shape<RenderComponentProps<T>>\n>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype OnItemsRenderedCallback = ({\n  overscanColumnStartIndex: number,\n  overscanColumnStopIndex: number,\n  overscanRowStartIndex: number,\n  overscanRowStopIndex: number,\n  visibleColumnStartIndex: number,\n  visibleColumnStopIndex: number,\n  visibleRowStartIndex: number,\n  visibleRowStopIndex: number,\n}) => void;\ntype OnScrollCallback = ({\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [key: string]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  columnCount: number,\n  columnWidth: itemSize,\n  direction: Direction,\n  height: number,\n  initialScrollLeft?: number,\n  initialScrollTop?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemData: T,\n  itemKey?: (params: {|\n    columnIndex: number,\n    data: T,\n    rowIndex: number,\n  |}) => any,\n  onItemsRendered?: OnItemsRenderedCallback,\n  onScroll?: OnScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanColumnCount?: number,\n  overscanColumnsCount?: number, // deprecated\n  overscanCount?: number, // deprecated\n  overscanRowCount?: number,\n  overscanRowsCount?: number, // deprecated\n  rowCount: number,\n  rowHeight: itemSize,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n|};\n\ntype getItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForItemAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any,\n  scrollbarSize: number\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = ({ columnIndex, data, rowIndex }) =>\n  `${rowIndex}:${columnIndex}`;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsOverscanCount = null;\nlet devWarningsOverscanRowsColumnsCount = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = new WeakSet();\n    devWarningsOverscanRowsColumnsCount = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createGridComponent({\n  getColumnOffset,\n  getColumnStartIndexForOffset,\n  getColumnStopIndexForStartIndex,\n  getColumnWidth,\n  getEstimatedTotalHeight,\n  getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment,\n  getOffsetForRowAndAlignment,\n  getRowHeight,\n  getRowOffset,\n  getRowStartIndexForOffset,\n  getRowStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getColumnOffset: getItemOffset,\n  getColumnStartIndexForOffset: GetStartIndexForOffset,\n  getColumnStopIndexForStartIndex: GetStopIndexForStartIndex,\n  getColumnWidth: getItemSize,\n  getEstimatedTotalHeight: getEstimatedTotalSize,\n  getEstimatedTotalWidth: getEstimatedTotalSize,\n  getOffsetForColumnAndAlignment: GetOffsetForItemAndAlignment,\n  getOffsetForRowAndAlignment: GetOffsetForItemAndAlignment,\n  getRowOffset: getItemOffset,\n  getRowHeight: getItemSize,\n  getRowStartIndexForOffset: GetStartIndexForOffset,\n  getRowStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class Grid<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n    _outerRef: ?HTMLDivElement;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      horizontalScrollDirection: 'forward',\n      scrollLeft:\n        typeof this.props.initialScrollLeft === 'number'\n          ? this.props.initialScrollLeft\n          : 0,\n      scrollTop:\n        typeof this.props.initialScrollTop === 'number'\n          ? this.props.initialScrollTop\n          : 0,\n      scrollUpdateWasRequested: false,\n      verticalScrollDirection: 'forward',\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo({\n      scrollLeft,\n      scrollTop,\n    }: {\n      scrollLeft: number,\n      scrollTop: number,\n    }): void {\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(prevState => {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem({\n      align = 'auto',\n      columnIndex,\n      rowIndex,\n    }: {\n      align: ScrollToAlign,\n      columnIndex?: number,\n      rowIndex?: number,\n    }): void {\n      const { columnCount, height, rowCount, width } = this.props;\n      const { scrollLeft, scrollTop } = this.state;\n      const scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      const horizontalScrollbarSize =\n        estimatedTotalWidth > width ? scrollbarSize : 0;\n      const verticalScrollbarSize =\n        estimatedTotalHeight > height ? scrollbarSize : 0;\n\n      this.scrollTo({\n        scrollLeft:\n          columnIndex !== undefined\n            ? getOffsetForColumnAndAlignment(\n                this.props,\n                columnIndex,\n                align,\n                scrollLeft,\n                this._instanceProps,\n                verticalScrollbarSize\n              )\n            : scrollLeft,\n        scrollTop:\n          rowIndex !== undefined\n            ? getOffsetForRowAndAlignment(\n                this.props,\n                rowIndex,\n                align,\n                scrollTop,\n                this._instanceProps,\n                horizontalScrollbarSize\n              )\n            : scrollTop,\n      });\n    }\n\n    componentDidMount() {\n      const { initialScrollLeft, initialScrollTop } = this.props;\n\n      if (this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction } = this.props;\n      const { scrollLeft, scrollTop, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n            default:\n              const { clientWidth, scrollWidth } = outerRef;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        columnCount,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        itemData,\n        itemKey = defaultItemKey,\n        outerElementType,\n        outerTagName,\n        rowCount,\n        style,\n        useIsScrolling,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      const [\n        columnStartIndex,\n        columnStopIndex,\n      ] = this._getHorizontalRangeToRender();\n      const [rowStartIndex, rowStopIndex] = this._getVerticalRangeToRender();\n\n      const items = [];\n      if (columnCount > 0 && rowCount) {\n        for (\n          let rowIndex = rowStartIndex;\n          rowIndex <= rowStopIndex;\n          rowIndex++\n        ) {\n          for (\n            let columnIndex = columnStartIndex;\n            columnIndex <= columnStopIndex;\n            columnIndex++\n          ) {\n            items.push(\n              createElement(children, {\n                columnIndex,\n                data: itemData,\n                isScrolling: useIsScrolling ? isScrolling : undefined,\n                key: itemKey({ columnIndex, data: itemData, rowIndex }),\n                rowIndex,\n                style: this._getItemStyle(rowIndex, columnIndex),\n              })\n            );\n          }\n        }\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll: this._onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            height,\n            width,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: estimatedTotalHeight,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: estimatedTotalWidth,\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanColumnStartIndex: number,\n      overscanColumnStopIndex: number,\n      overscanRowStartIndex: number,\n      overscanRowStopIndex: number,\n      visibleColumnStartIndex: number,\n      visibleColumnStopIndex: number,\n      visibleRowStartIndex: number,\n      visibleRowStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanColumnStartIndex: number,\n        overscanColumnStopIndex: number,\n        overscanRowStartIndex: number,\n        overscanRowStopIndex: number,\n        visibleColumnStartIndex: number,\n        visibleColumnStopIndex: number,\n        visibleRowStartIndex: number,\n        visibleRowStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): OnItemsRenderedCallback)({\n          overscanColumnStartIndex,\n          overscanColumnStopIndex,\n          overscanRowStartIndex,\n          overscanRowStopIndex,\n          visibleColumnStartIndex,\n          visibleColumnStopIndex,\n          visibleRowStartIndex,\n          visibleRowStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollLeft: number,\n      scrollTop: number,\n      horizontalScrollDirection: ScrollDirection,\n      verticalScrollDirection: ScrollDirection,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollLeft: number,\n        scrollTop: number,\n        horizontalScrollDirection: ScrollDirection,\n        verticalScrollDirection: ScrollDirection,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): OnScrollCallback)({\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          verticalScrollDirection,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      const { columnCount, onItemsRendered, onScroll, rowCount } = this.props;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          const [\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n          ] = this._getHorizontalRangeToRender();\n          const [\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex,\n          ] = this._getVerticalRangeToRender();\n          this._callOnItemsRendered(\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex\n          );\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        const {\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          scrollUpdateWasRequested,\n          verticalScrollDirection,\n        } = this.state;\n        this._callOnScroll(\n          scrollLeft,\n          scrollTop,\n          horizontalScrollDirection,\n          verticalScrollDirection,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (rowIndex: number, columnIndex: number) => Object;\n    _getItemStyle = (rowIndex: number, columnIndex: number): Object => {\n      const { columnWidth, direction, rowHeight } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && columnWidth,\n        shouldResetStyleCacheOnItemSizeChange && direction,\n        shouldResetStyleCacheOnItemSizeChange && rowHeight\n      );\n\n      const key = `${rowIndex}:${columnIndex}`;\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(key)) {\n        style = itemStyleCache[key];\n      } else {\n        const offset = getColumnOffset(\n          this.props,\n          columnIndex,\n          this._instanceProps\n        );\n        const isRtl = direction === 'rtl';\n        itemStyleCache[key] = style = {\n          position: 'absolute',\n          left: isRtl ? undefined : offset,\n          right: isRtl ? offset : undefined,\n          top: getRowOffset(this.props, rowIndex, this._instanceProps),\n          height: getRowHeight(this.props, rowIndex, this._instanceProps),\n          width: getColumnWidth(this.props, columnIndex, this._instanceProps),\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getHorizontalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanColumnCount,\n        overscanColumnsCount,\n        overscanCount,\n        rowCount,\n      } = this.props;\n      const { horizontalScrollDirection, isScrolling, scrollLeft } = this.state;\n\n      const overscanCountResolved: number =\n        overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getColumnStartIndexForOffset(\n        this.props,\n        scrollLeft,\n        this._instanceProps\n      );\n      const stopIndex = getColumnStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollLeft,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || horizontalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || horizontalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _getVerticalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanCount,\n        overscanRowCount,\n        overscanRowsCount,\n        rowCount,\n      } = this.props;\n      const { isScrolling, verticalScrollDirection, scrollTop } = this.state;\n\n      const overscanCountResolved: number =\n        overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getRowStartIndexForOffset(\n        this.props,\n        scrollTop,\n        this._instanceProps\n      );\n      const stopIndex = getRowStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollTop,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || verticalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || verticalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScroll = (event: ScrollEvent): void => {\n      const {\n        clientHeight,\n        clientWidth,\n        scrollLeft,\n        scrollTop,\n        scrollHeight,\n        scrollWidth,\n      } = event.currentTarget;\n      this.setState(prevState => {\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n        // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n        let calculatedScrollLeft = scrollLeft;\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              calculatedScrollLeft = -scrollLeft;\n              break;\n            case 'positive-descending':\n              calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        calculatedScrollLeft = Math.max(\n          0,\n          Math.min(calculatedScrollLeft, scrollWidth - clientWidth)\n        );\n        const calculatedScrollTop = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: calculatedScrollTop,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1);\n      });\n    };\n  };\n}\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    innerTagName,\n    outerTagName,\n    overscanColumnsCount,\n    overscanCount,\n    overscanRowsCount,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn(\n          'The overscanCount prop has been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (\n      typeof overscanColumnsCount === 'number' ||\n      typeof overscanRowsCount === 'number'\n    ) {\n      if (\n        devWarningsOverscanRowsColumnsCount &&\n        !devWarningsOverscanRowsColumnsCount.has(instance)\n      ) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn(\n          'The overscanColumnsCount and overscanRowsCount props have been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    if (typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Grids must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    }\n\n    if (typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Grids must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n// TODO Deprecate directions \"horizontal\" and \"vertical\"\ntype Direction = 'ltr' | 'rtl' | 'horizontal' | 'vertical';\ntype Layout = 'horizontal' | 'vertical';\n\ntype RenderComponentProps<T> = {|\n  data: T,\n  index: number,\n  isScrolling?: boolean,\n  style: Object,\n|};\ntype RenderComponent<T> = React$ComponentType<$Shape<RenderComponentProps<T>>>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype onItemsRenderedCallback = ({\n  overscanStartIndex: number,\n  overscanStopIndex: number,\n  visibleStartIndex: number,\n  visibleStopIndex: number,\n}) => void;\ntype onScrollCallback = ({\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [index: number]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  direction: Direction,\n  height: number | string,\n  initialScrollOffset?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemCount: number,\n  itemData: T,\n  itemKey?: (index: number, data: T) => any,\n  itemSize: itemSize,\n  layout: Layout,\n  onItemsRendered?: onItemsRenderedCallback,\n  onScroll?: onScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanCount: number,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number | string,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n|};\n\ntype GetItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForIndexAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = (index: number, data: any) => index;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsDirection = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createListComponent({\n  getItemOffset,\n  getEstimatedTotalSize,\n  getItemSize,\n  getOffsetForIndexAndAlignment,\n  getStartIndexForOffset,\n  getStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getItemOffset: GetItemOffset,\n  getEstimatedTotalSize: GetEstimatedTotalSize,\n  getItemSize: GetItemSize,\n  getOffsetForIndexAndAlignment: GetOffsetForIndexAndAlignment,\n  getStartIndexForOffset: GetStartIndexForOffset,\n  getStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class List<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _outerRef: ?HTMLDivElement;\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      layout: 'vertical',\n      overscanCount: 2,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      scrollDirection: 'forward',\n      scrollOffset:\n        typeof this.props.initialScrollOffset === 'number'\n          ? this.props.initialScrollOffset\n          : 0,\n      scrollUpdateWasRequested: false,\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo(scrollOffset: number): void {\n      scrollOffset = Math.max(0, scrollOffset);\n\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n        return {\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true,\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem(index: number, align: ScrollToAlign = 'auto'): void {\n      const { itemCount } = this.props;\n      const { scrollOffset } = this.state;\n\n      index = Math.max(0, Math.min(index, itemCount - 1));\n\n      this.scrollTo(\n        getOffsetForIndexAndAlignment(\n          this.props,\n          index,\n          align,\n          scrollOffset,\n          this._instanceProps\n        )\n      );\n    }\n\n    componentDidMount() {\n      const { direction, initialScrollOffset, layout } = this.props;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction, layout } = this.props;\n      const { scrollOffset, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n              default:\n                const { clientWidth, scrollWidth } = outerRef;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        itemCount,\n        itemData,\n        itemKey = defaultItemKey,\n        layout,\n        outerElementType,\n        outerTagName,\n        style,\n        useIsScrolling,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      // TODO Deprecate direction \"horizontal\"\n      const isHorizontal =\n        direction === 'horizontal' || layout === 'horizontal';\n\n      const onScroll = isHorizontal\n        ? this._onScrollHorizontal\n        : this._onScrollVertical;\n\n      const [startIndex, stopIndex] = this._getRangeToRender();\n\n      const items = [];\n      if (itemCount > 0) {\n        for (let index = startIndex; index <= stopIndex; index++) {\n          items.push(\n            createElement(children, {\n              data: itemData,\n              key: itemKey(index, itemData),\n              index,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              style: this._getItemStyle(index),\n            })\n          );\n        }\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalSize = getEstimatedTotalSize(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            height,\n            width,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: isHorizontal ? '100%' : estimatedTotalSize,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: isHorizontal ? estimatedTotalSize : '100%',\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanStartIndex: number,\n      overscanStopIndex: number,\n      visibleStartIndex: number,\n      visibleStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanStartIndex: number,\n        overscanStopIndex: number,\n        visibleStartIndex: number,\n        visibleStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): onItemsRenderedCallback)({\n          overscanStartIndex,\n          overscanStopIndex,\n          visibleStartIndex,\n          visibleStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollDirection: ScrollDirection,\n      scrollOffset: number,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollDirection: ScrollDirection,\n        scrollOffset: number,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): onScrollCallback)({\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        const { itemCount } = this.props;\n        if (itemCount > 0) {\n          const [\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex,\n          ] = this._getRangeToRender();\n          this._callOnItemsRendered(\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex\n          );\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        const {\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        } = this.state;\n        this._callOnScroll(\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (index: number) => Object;\n    _getItemStyle = (index: number): Object => {\n      const { direction, itemSize, layout } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && itemSize,\n        shouldResetStyleCacheOnItemSizeChange && layout,\n        shouldResetStyleCacheOnItemSizeChange && direction\n      );\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(index)) {\n        style = itemStyleCache[index];\n      } else {\n        const offset = getItemOffset(this.props, index, this._instanceProps);\n        const size = getItemSize(this.props, index, this._instanceProps);\n\n        // TODO Deprecate direction \"horizontal\"\n        const isHorizontal =\n          direction === 'horizontal' || layout === 'horizontal';\n\n        const isRtl = direction === 'rtl';\n        const offsetHorizontal = isHorizontal ? offset : 0;\n        itemStyleCache[index] = style = {\n          position: 'absolute',\n          left: isRtl ? undefined : offsetHorizontal,\n          right: isRtl ? offsetHorizontal : undefined,\n          top: !isHorizontal ? offset : 0,\n          height: !isHorizontal ? size : '100%',\n          width: isHorizontal ? size : '100%',\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getRangeToRender(): [number, number, number, number] {\n      const { itemCount, overscanCount } = this.props;\n      const { isScrolling, scrollDirection, scrollOffset } = this.state;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getStartIndexForOffset(\n        this.props,\n        scrollOffset,\n        this._instanceProps\n      );\n      const stopIndex = getStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollOffset,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || scrollDirection === 'backward'\n          ? Math.max(1, overscanCount)\n          : 1;\n      const overscanForward =\n        !isScrolling || scrollDirection === 'forward'\n          ? Math.max(1, overscanCount)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScrollHorizontal = (event: ScrollEvent): void => {\n      const { clientWidth, scrollLeft, scrollWidth } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollLeft) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        let scrollOffset = scrollLeft;\n        if (direction === 'rtl') {\n          // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              scrollOffset = -scrollLeft;\n              break;\n            case 'positive-descending':\n              scrollOffset = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        scrollOffset = Math.max(\n          0,\n          Math.min(scrollOffset, scrollWidth - clientWidth)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _onScrollVertical = (event: ScrollEvent): void => {\n      const { clientHeight, scrollHeight, scrollTop } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollTop) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        const scrollOffset = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1, null);\n      });\n    };\n  };\n}\n\n// NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    layout,\n    innerTagName,\n    outerTagName,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn(\n            'The direction prop should be either \"ltr\" (default) or \"rtl\". ' +\n              'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.'\n          );\n        }\n        break;\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"layout\" prop has been specified. ' +\n            'Value should be either \"horizontal\" or \"vertical\". ' +\n            `\"${layout}\" was specified.`\n        );\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Horizontal lists must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Vertical lists must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst FixedSizeList = createListComponent({\n  getItemOffset: ({ itemSize }: Props<any>, index: number): number =>\n    index * ((itemSize: any): number),\n\n  getItemSize: ({ itemSize }: Props<any>, index: number): number =>\n    ((itemSize: any): number),\n\n  getEstimatedTotalSize: ({ itemCount, itemSize }: Props<any>) =>\n    ((itemSize: any): number) * itemCount,\n\n  getOffsetForIndexAndAlignment: (\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number\n  ): number => {\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const lastItemOffset = Math.max(\n      0,\n      itemCount * ((itemSize: any): number) - size\n    );\n    const maxOffset = Math.min(\n      lastItemOffset,\n      index * ((itemSize: any): number)\n    );\n    const minOffset = Math.max(\n      0,\n      index * ((itemSize: any): number) - size + ((itemSize: any): number)\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center': {\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        const middleOffset = Math.round(\n          minOffset + (maxOffset - minOffset) / 2\n        );\n        if (middleOffset < Math.ceil(size / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n          return lastItemOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n      }\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    { itemCount, itemSize }: Props<any>,\n    offset: number\n  ): number =>\n    Math.max(\n      0,\n      Math.min(itemCount - 1, Math.floor(offset / ((itemSize: any): number)))\n    ),\n\n  getStopIndexForStartIndex: (\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\n    startIndex: number,\n    scrollOffset: number\n  ): number => {\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const offset = startIndex * ((itemSize: any): number);\n    const size = (((isHorizontal ? width : height): any): number);\n    const numVisibleItems = Math.ceil(\n      (size + scrollOffset - offset) / ((itemSize: any): number)\n    );\n    return Math.max(\n      0,\n      Math.min(\n        itemCount - 1,\n        startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n      )\n    );\n  },\n\n  initInstanceProps(props: Props<any>): any {\n    // Noop\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: true,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a number. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default FixedSizeList;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nfunction UnitNumber(_ref) {\n  var prefixCls = _ref.prefixCls,\n      value = _ref.value,\n      current = _ref.current,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? 0 : _ref$offset;\n  var style;\n\n  if (offset) {\n    style = {\n      position: 'absolute',\n      top: \"\".concat(offset, \"00%\"),\n      left: 0\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    style: style,\n    className: classNames(\"\".concat(prefixCls, \"-only-unit\"), {\n      current: current\n    })\n  }, value);\n}\n\nfunction getOffset(start, end, unit) {\n  var index = start;\n  var offset = 0;\n\n  while ((index + 10) % 10 !== end) {\n    index += unit;\n    offset += unit;\n  }\n\n  return offset;\n}\n\nexport default function SingleNumber(props) {\n  var prefixCls = props.prefixCls,\n      originCount = props.count,\n      originValue = props.value;\n  var value = Number(originValue);\n  var count = Math.abs(originCount);\n\n  var _React$useState = React.useState(value),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      prevValue = _React$useState2[0],\n      setPrevValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(count),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      prevCount = _React$useState4[0],\n      setPrevCount = _React$useState4[1]; // ============================= Events =============================\n\n\n  var onTransitionEnd = function onTransitionEnd() {\n    setPrevValue(value);\n    setPrevCount(count);\n  }; // Fallback if transition event not support\n\n\n  React.useEffect(function () {\n    var timeout = setTimeout(function () {\n      onTransitionEnd();\n    }, 1000);\n    return function () {\n      clearTimeout(timeout);\n    };\n  }, [value]); // ============================= Render =============================\n  // Render unit list\n\n  var unitNodes;\n  var offsetStyle;\n\n  if (prevValue === value || Number.isNaN(value) || Number.isNaN(prevValue)) {\n    // Nothing to change\n    unitNodes = [/*#__PURE__*/React.createElement(UnitNumber, _extends({}, props, {\n      key: value,\n      current: true\n    }))];\n    offsetStyle = {\n      transition: 'none'\n    };\n  } else {\n    unitNodes = []; // Fill basic number units\n\n    var end = value + 10;\n    var unitNumberList = [];\n\n    for (var index = value; index <= end; index += 1) {\n      unitNumberList.push(index);\n    } // Fill with number unit nodes\n\n\n    var prevIndex = unitNumberList.findIndex(function (n) {\n      return n % 10 === prevValue;\n    });\n    unitNodes = unitNumberList.map(function (n, index) {\n      var singleUnit = n % 10;\n      return /*#__PURE__*/React.createElement(UnitNumber, _extends({}, props, {\n        key: n,\n        value: singleUnit,\n        offset: index - prevIndex,\n        current: index === prevIndex\n      }));\n    }); // Calculate container offset value\n\n    var unit = prevCount < count ? 1 : -1;\n    offsetStyle = {\n      transform: \"translateY(\".concat(-getOffset(prevValue, value, unit), \"00%)\")\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-only\"),\n    style: offsetStyle,\n    onTransitionEnd: onTransitionEnd\n  }, unitNodes);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport { cloneElement } from '../_util/reactNode';\nimport SingleNumber from './SingleNumber';\n\nvar ScrollNumber = function ScrollNumber(_a) {\n  var customizePrefixCls = _a.prefixCls,\n      count = _a.count,\n      className = _a.className,\n      motionClassName = _a.motionClassName,\n      style = _a.style,\n      title = _a.title,\n      show = _a.show,\n      _a$component = _a.component,\n      component = _a$component === void 0 ? 'sup' : _a$component,\n      children = _a.children,\n      restProps = __rest(_a, [\"prefixCls\", \"count\", \"className\", \"motionClassName\", \"style\", \"title\", \"show\", \"component\", \"children\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('scroll-number', customizePrefixCls); // ============================ Render ============================\n\n  var newProps = _extends(_extends({}, restProps), {\n    'data-show': show,\n    style: style,\n    className: classNames(prefixCls, className, motionClassName),\n    title: title\n  }); // Only integer need motion\n\n\n  var numberNodes = count;\n\n  if (count && Number(count) % 1 === 0) {\n    var numberList = String(count).split('');\n    numberNodes = numberList.map(function (num, i) {\n      return /*#__PURE__*/React.createElement(SingleNumber, {\n        prefixCls: prefixCls,\n        count: Number(count),\n        value: num // eslint-disable-next-line react/no-array-index-key\n        ,\n        key: numberList.length - i\n      });\n    });\n  } // allow specify the border\n  // mock border-color by box-shadow for compatible with old usage:\n  // <Badge count={4} style={{ backgroundColor: '#fff', color: '#999', borderColor: '#d9d9d9' }} />\n\n\n  if (style && style.borderColor) {\n    newProps.style = _extends(_extends({}, style), {\n      boxShadow: \"0 0 0 1px \".concat(style.borderColor, \" inset\")\n    });\n  }\n\n  if (children) {\n    return cloneElement(children, function (oriProps) {\n      return {\n        className: classNames(\"\".concat(prefixCls, \"-custom-component\"), oriProps === null || oriProps === void 0 ? void 0 : oriProps.className, motionClassName)\n      };\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(component, newProps, numberNodes);\n};\n\nexport default ScrollNumber;","import { PresetColorTypes } from '../_util/colors'; // eslint-disable-next-line import/prefer-default-export\n\nexport function isPresetColor(color) {\n  return PresetColorTypes.indexOf(color) !== -1;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport { isPresetColor } from './utils';\n\nvar Ribbon = function Ribbon(_ref) {\n  var _classNames;\n\n  var className = _ref.className,\n      customizePrefixCls = _ref.prefixCls,\n      style = _ref.style,\n      color = _ref.color,\n      children = _ref.children,\n      text = _ref.text,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'end' : _ref$placement;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('ribbon', customizePrefixCls);\n  var colorInPreset = isPresetColor(color);\n  var ribbonCls = classNames(prefixCls, \"\".concat(prefixCls, \"-placement-\").concat(placement), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-color-\").concat(color), colorInPreset), _classNames), className);\n  var colorStyle = {};\n  var cornerColorStyle = {};\n\n  if (color && !colorInPreset) {\n    colorStyle.background = color;\n    cornerColorStyle.color = color;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-wrapper\")\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    className: ribbonCls,\n    style: _extends(_extends({}, colorStyle), style)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-text\")\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-corner\"),\n    style: cornerColorStyle\n  })));\n};\n\nexport default Ribbon;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { useMemo, useRef } from 'react';\nimport CSSMotion from 'rc-motion';\nimport classNames from 'classnames';\nimport ScrollNumber from './ScrollNumber';\nimport Ribbon from './Ribbon';\nimport { ConfigContext } from '../config-provider';\nimport { cloneElement } from '../_util/reactNode';\nimport { isPresetColor } from './utils';\n\nvar Badge = function Badge(_a) {\n  var _classNames, _classNames2;\n\n  var customizePrefixCls = _a.prefixCls,\n      customizeScrollNumberPrefixCls = _a.scrollNumberPrefixCls,\n      children = _a.children,\n      status = _a.status,\n      text = _a.text,\n      color = _a.color,\n      _a$count = _a.count,\n      count = _a$count === void 0 ? null : _a$count,\n      _a$overflowCount = _a.overflowCount,\n      overflowCount = _a$overflowCount === void 0 ? 99 : _a$overflowCount,\n      _a$dot = _a.dot,\n      dot = _a$dot === void 0 ? false : _a$dot,\n      _a$size = _a.size,\n      size = _a$size === void 0 ? 'default' : _a$size,\n      title = _a.title,\n      offset = _a.offset,\n      style = _a.style,\n      className = _a.className,\n      _a$showZero = _a.showZero,\n      showZero = _a$showZero === void 0 ? false : _a$showZero,\n      restProps = __rest(_a, [\"prefixCls\", \"scrollNumberPrefixCls\", \"children\", \"status\", \"text\", \"color\", \"count\", \"overflowCount\", \"dot\", \"size\", \"title\", \"offset\", \"style\", \"className\", \"showZero\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('badge', customizePrefixCls); // ================================ Misc ================================\n\n  var numberedDisplayCount = count > overflowCount ? \"\".concat(overflowCount, \"+\") : count;\n  var hasStatus = status !== null && status !== undefined || color !== null && color !== undefined;\n  var isZero = numberedDisplayCount === '0' || numberedDisplayCount === 0;\n  var showAsDot = dot && !isZero;\n  var mergedCount = showAsDot ? '' : numberedDisplayCount;\n  var isHidden = useMemo(function () {\n    var isEmpty = mergedCount === null || mergedCount === undefined || mergedCount === '';\n    return (isEmpty || isZero && !showZero) && !showAsDot;\n  }, [mergedCount, isZero, showZero, showAsDot]); // Count should be cache in case hidden change it\n\n  var countRef = useRef(count);\n\n  if (!isHidden) {\n    countRef.current = count;\n  }\n\n  var livingCount = countRef.current; // We need cache count since remove motion should not change count display\n\n  var displayCountRef = useRef(mergedCount);\n\n  if (!isHidden) {\n    displayCountRef.current = mergedCount;\n  }\n\n  var displayCount = displayCountRef.current; // We will cache the dot status to avoid shaking on leaved motion\n\n  var isDotRef = useRef(showAsDot);\n\n  if (!isHidden) {\n    isDotRef.current = showAsDot;\n  } // =============================== Styles ===============================\n\n\n  var mergedStyle = useMemo(function () {\n    if (!offset) {\n      return _extends({}, style);\n    }\n\n    var offsetStyle = {\n      marginTop: offset[1]\n    };\n\n    if (direction === 'rtl') {\n      offsetStyle.left = parseInt(offset[0], 10);\n    } else {\n      offsetStyle.right = -parseInt(offset[0], 10);\n    }\n\n    return _extends(_extends({}, offsetStyle), style);\n  }, [direction, offset, style]); // =============================== Render ===============================\n  // >>> Title\n\n  var titleNode = title !== null && title !== void 0 ? title : typeof livingCount === 'string' || typeof livingCount === 'number' ? livingCount : undefined; // >>> Status Text\n\n  var statusTextNode = isHidden || !text ? null : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-status-text\")\n  }, text); // >>> Display Component\n\n  var displayNode = !livingCount || _typeof(livingCount) !== 'object' ? undefined : cloneElement(livingCount, function (oriProps) {\n    return {\n      style: _extends(_extends({}, mergedStyle), oriProps.style)\n    };\n  }); // Shared styles\n\n  var statusCls = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-status-dot\"), hasStatus), _defineProperty(_classNames, \"\".concat(prefixCls, \"-status-\").concat(status), !!status), _defineProperty(_classNames, \"\".concat(prefixCls, \"-status-\").concat(color), isPresetColor(color)), _classNames));\n  var statusStyle = {};\n\n  if (color && !isPresetColor(color)) {\n    statusStyle.background = color;\n  }\n\n  var badgeClassName = classNames(prefixCls, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-status\"), hasStatus), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-not-a-wrapper\"), !children), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames2), className); // <Badge status=\"success\" />\n\n  if (!children && hasStatus) {\n    var statusTextColor = mergedStyle.color;\n    return /*#__PURE__*/React.createElement(\"span\", _extends({}, restProps, {\n      className: badgeClassName,\n      style: mergedStyle\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: statusCls,\n      style: statusStyle\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: statusTextColor\n      },\n      className: \"\".concat(prefixCls, \"-status-text\")\n    }, text));\n  } // <Badge status=\"success\" count={<Icon type=\"xxx\" />}></Badge>\n\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, restProps, {\n    className: badgeClassName\n  }), children, /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: !isHidden,\n    motionName: \"\".concat(prefixCls, \"-zoom\"),\n    motionAppear: false\n  }, function (_ref) {\n    var _classNames3;\n\n    var motionClassName = _ref.className;\n    var scrollNumberPrefixCls = getPrefixCls('scroll-number', customizeScrollNumberPrefixCls);\n    var isDot = isDotRef.current;\n    var scrollNumberCls = classNames((_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(prefixCls, \"-dot\"), isDot), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-count\"), !isDot), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-count-sm\"), size === 'small'), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-multiple-words\"), !isDot && displayCount && displayCount.toString().length > 1), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-status-\").concat(status), !!status), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-status-\").concat(color), isPresetColor(color)), _classNames3));\n\n    var scrollNumberStyle = _extends({}, mergedStyle);\n\n    if (color && !isPresetColor(color)) {\n      scrollNumberStyle = scrollNumberStyle || {};\n      scrollNumberStyle.background = color;\n    }\n\n    return /*#__PURE__*/React.createElement(ScrollNumber, {\n      prefixCls: scrollNumberPrefixCls,\n      show: !isHidden,\n      motionClassName: motionClassName,\n      className: scrollNumberCls,\n      count: displayCount,\n      title: titleNode,\n      style: scrollNumberStyle,\n      key: \"scrollNumber\"\n    }, displayNode);\n  }), statusTextNode);\n};\n\nBadge.Ribbon = Ribbon;\nexport default Badge;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\n\nvar CheckableTag = function CheckableTag(_a) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      className = _a.className,\n      checked = _a.checked,\n      onChange = _a.onChange,\n      onClick = _a.onClick,\n      restProps = __rest(_a, [\"prefixCls\", \"className\", \"checked\", \"onChange\", \"onClick\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var handleClick = function handleClick(e) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked);\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable-checked\"), checked), _classNames), className);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, restProps, {\n    className: cls,\n    onClick: handleClick\n  }));\n};\n\nexport default CheckableTag;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport CheckableTag from './CheckableTag';\nimport { ConfigContext } from '../config-provider';\nimport { PresetColorTypes, PresetStatusColorTypes } from '../_util/colors';\nimport Wave from '../_util/wave';\nvar PresetColorRegex = new RegExp(\"^(\".concat(PresetColorTypes.join('|'), \")(-inverse)?$\"));\nvar PresetStatusColorRegex = new RegExp(\"^(\".concat(PresetStatusColorTypes.join('|'), \")$\"));\n\nvar InternalTag = function InternalTag(_a, ref) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      className = _a.className,\n      style = _a.style,\n      children = _a.children,\n      icon = _a.icon,\n      color = _a.color,\n      onClose = _a.onClose,\n      closeIcon = _a.closeIcon,\n      _a$closable = _a.closable,\n      closable = _a$closable === void 0 ? false : _a$closable,\n      props = __rest(_a, [\"prefixCls\", \"className\", \"style\", \"children\", \"icon\", \"color\", \"onClose\", \"closeIcon\", \"closable\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  React.useEffect(function () {\n    if ('visible' in props) {\n      setVisible(props.visible);\n    }\n  }, [props.visible]);\n\n  var isPresetColor = function isPresetColor() {\n    if (!color) {\n      return false;\n    }\n\n    return PresetColorRegex.test(color) || PresetStatusColorRegex.test(color);\n  };\n\n  var tagStyle = _extends({\n    backgroundColor: color && !isPresetColor() ? color : undefined\n  }, style);\n\n  var presetColor = isPresetColor();\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var tagClassName = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(color), presetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-has-color\"), color && !presetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-hidden\"), !visible), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n\n  var handleCloseClick = function handleCloseClick(e) {\n    e.stopPropagation();\n    onClose === null || onClose === void 0 ? void 0 : onClose(e);\n\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    if (!('visible' in props)) {\n      setVisible(false);\n    }\n  };\n\n  var renderCloseIcon = function renderCloseIcon() {\n    if (closable) {\n      return closeIcon ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      }, closeIcon) : /*#__PURE__*/React.createElement(CloseOutlined, {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      });\n    }\n\n    return null;\n  };\n\n  var isNeedWave = 'onClick' in props || children && children.type === 'a';\n  var tagProps = omit(props, ['visible']);\n  var iconNode = icon || null;\n  var kids = iconNode ? /*#__PURE__*/React.createElement(React.Fragment, null, iconNode, /*#__PURE__*/React.createElement(\"span\", null, children)) : children;\n  var tagNode = /*#__PURE__*/React.createElement(\"span\", _extends({}, tagProps, {\n    ref: ref,\n    className: tagClassName,\n    style: tagStyle\n  }), kids, renderCloseIcon());\n  return isNeedWave ? /*#__PURE__*/React.createElement(Wave, null, tagNode) : tagNode;\n};\n\nvar Tag = /*#__PURE__*/React.forwardRef(InternalTag);\nTag.displayName = 'Tag';\nTag.CheckableTag = CheckableTag;\nexport default Tag;","// This icon file is generated automatically.\nvar BarChartOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M888 792H200V168c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h752c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-600-80h56c4.4 0 8-3.6 8-8V560c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v144c0 4.4 3.6 8 8 8zm152 0h56c4.4 0 8-3.6 8-8V384c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v320c0 4.4 3.6 8 8 8zm152 0h56c4.4 0 8-3.6 8-8V462c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v242c0 4.4 3.6 8 8 8zm152 0h56c4.4 0 8-3.6 8-8V304c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v400c0 4.4 3.6 8 8 8z\" } }] }, \"name\": \"bar-chart\", \"theme\": \"outlined\" };\nexport default BarChartOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport BarChartOutlinedSvg from \"@ant-design/icons-svg/es/asn/BarChartOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar BarChartOutlined = function BarChartOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: BarChartOutlinedSvg\n  }));\n};\n\nBarChartOutlined.displayName = 'BarChartOutlined';\nexport default /*#__PURE__*/React.forwardRef(BarChartOutlined);"],"sourceRoot":""}