{"version":3,"sources":["page/sourcemap/component/Editor/index.js","page/sourcemap/util/index.js","webpack:///./src/page/sourcemap/index.js?b1f6","util/index.js","page/sourcemap/index.js"],"names":["Editor","content","startLine","endLine","className","language","theme","value","options","readOnly","editorDidMount","editor","deltaDecorations","range","monaco","Range","isWholeLine","memo","map","Map","set","getFileContentFromUrl","url","a","axios","get","TabPane","Tabs","Sourcemap","console","log","type","useState","lineNo","setLineNo","columnNo","setColumnNo","setUrl","result","setResult","useEffect","window","onerror","msg","mapContent","sourceMap","SourceMapConsumer","with","consumer","res","originalPositionFor","line","column","sourceContentFor","source","JSON","stringify","defaultActiveKey","tab","onClick","Error","has"],"mappings":"gSAKA,SAASA,EAAT,GAAkD,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QAIpC,OACE,qBAAKC,UAAU,SAAf,SACE,cAAC,IAAD,CACEC,SAAS,aACTC,MAAM,KACNC,MAAON,EACPO,QATU,CACdC,UAAU,GASNC,eAAgB,SAACC,GACU,kBAAdT,GAA6C,kBAAZC,IAGxCD,EAAYC,GAGhBQ,EAAOC,iBACL,GACA,CACE,CACEC,MAAO,IAAIC,IAAOC,MAAMb,EAAW,EAAGC,EAAS,GAC/CK,QAAS,CACPQ,aAAa,EACbZ,UAAW,+BAiBda,qBAAKjB,GC7CdkB,EAAM,IAAIC,IAChBD,EAAIE,IAAI,OCHO,m0E,qBCEAC,E,8EAAf,WAAqCC,GAArC,SAAAC,EAAA,sEACeC,IAAMC,IAAIH,GADzB,oF,sBCMA,IAAQI,EAAYC,IAAZD,QA8DOE,UA5Df,WACEC,QAAQC,IAAI,oBACZ,IHPuBC,EGOvB,EAA4BC,oBAAU,GAAtC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgCF,oBAAU,GAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAsBJ,mBAAS,IAA/B,mBAAOV,EAAP,KAAYe,EAAZ,KACA,EAA4BL,mBAAS,IAArC,mBAAOM,EAAP,KAAeC,EAAf,KA4BA,OA3BAC,qBAAU,WACRC,OAAOC,QAAU,SAAUC,EAAKrB,EAAKW,EAAQE,GAI3C,OAHAD,EAAUD,GACVG,EAAYD,GACZE,EAAOf,IACA,KAER,IACHkB,oBAAS,sBAAC,4BAAAjB,EAAA,2DACJU,EAAS,GAAKE,EAAW,IAAMb,EAD3B,wDAIRO,QAAQC,IAAI,IAAKG,EAAQE,EAAUb,GAJ3B,SAKiBD,EAAsB,GAAD,OAAIC,EAAJ,SALtC,cAKFsB,EALE,OAMRC,UAAUC,kBAAkBC,KAAKH,EAAY,MAAM,SAACI,GAClD,IAAMC,EAAMD,EAASE,oBAAoB,CACvCC,KAAMlB,EACNmB,OAAQjB,IAEVN,QAAQC,IAAI,EAAGkB,EAASK,iBAAiBJ,EAAIK,SAC7Cf,EAAUgB,KAAKC,UAAUP,OAZnB,mBAcD,eAdC,2CAeP,CAAChB,EAAQE,EAAUb,IAKpB,sBAAKlB,UAAU,YAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,8CACA,kHAEF,eAAC,IAAD,CAAMqD,iBAAiB,IAAIrD,UAAU,kBAArC,UACE,eAACsB,EAAD,CAASgC,IAAI,6BAAb,UACE,gCACE,cAAC,IAAD,CAAQ3B,KAAK,UAAU3B,UAAU,uBAAuBuD,QAZlE,WACE,MAAM,IAAIC,MAAM,cAWR,4BAGGtB,GAAUA,KAEf,cAAC,EAAD,CAAQrC,SHpDO8B,EGoDkB,OHnDlCb,EAAI2C,IAAI9B,GAAQb,EAAIO,IAAIM,GAAQ,IGmDW3B,UAAU,0BAA0BF,UAAW,GAAIC,QAAS,OAP9E,KAS1B,cAACuB,EAAD,CAASgC,IAAI,6BAAb,kCAA0B,KAG1B,cAAChC,EAAD,CAASgC,IAAI,6BAAb,kCAA0B","file":"static/js/9.e301d243.chunk.js","sourcesContent":["import \"./index.scss\";\nimport MonacoEditor, { monaco } from \"react-monaco-editor\";\nimport PropTypes from \"prop-types\";\nimport { memo } from \"react\";\n\nfunction Editor({ content, startLine, endLine }) {\n  const options = {\n    readOnly: true,\n  };\n  return (\n    <div className=\"editor\">\n      <MonacoEditor\n        language=\"javascript\"\n        theme=\"vs\"\n        value={content}\n        options={options}\n        editorDidMount={(editor) => {\n          if (typeof startLine !== \"number\" || typeof endLine !== \"number\") {\n            return;\n          }\n          if (startLine > endLine) {\n            return;\n          }\n          editor.deltaDecorations(\n            [],\n            [\n              {\n                range: new monaco.Range(startLine, 1, endLine, 1), // 开始行，开始列，结束行，结束列\n                options: {\n                  isWholeLine: true,\n                  className: \"editor--hightlight\",\n                },\n              }\n            ]\n          );\n        }}\n      />\n    </div>\n  );\n}\n\nEditor.propTypes = {\n  content: PropTypes.string,\n  startLine: PropTypes.number,\n  endLine: PropTypes.number,\n};\n\nexport default memo(Editor);\n","import pageContent from \"!!raw-loader!../index.js\";\n\nconst map = new Map();\nmap.set(\"page\", pageContent);\n\nfunction readFileContent(type) {\n  return map.has(type) ? map.get(type) : \"\";\n}\n\nexport {\n  readFileContent\n};","export default \"/* eslint-disable no-unused-vars */\\nimport \\\"./index.scss\\\";\\nimport { Tabs, Button } from \\\"antd\\\";\\nimport Editor from \\\"./component/Editor\\\";\\nimport { readFileContent } from \\\"./util\\\";\\nimport { useEffect, useState } from \\\"react\\\";\\nimport { getFileContentFromUrl } from \\\"@/util\\\";\\n\\nconst { TabPane } = Tabs;\\n\\nfunction Sourcemap() {\\n  console.log(\\\"render sourcemap\\\");\\n  const [lineNo, setLineNo] = useState(-1);\\n  const [columnNo, setColumnNo] = useState(-1);\\n  const [url, setUrl] = useState(\\\"\\\");\\n  const [result, setResult] = useState(\\\"\\\");\\n  useEffect(() => {\\n    window.onerror = function (msg, url, lineNo, columnNo) {\\n      setLineNo(lineNo);\\n      setColumnNo(columnNo);\\n      setUrl(url);\\n      return false;\\n    };\\n  }, []);\\n  useEffect(async () => {\\n    if (lineNo < 0 || columnNo < 0 || !url) {\\n      return;\\n    }\\n    console.log(\\\"2\\\", lineNo, columnNo, url);\\n    const mapContent = await getFileContentFromUrl(`${url}.map`);\\n    sourceMap.SourceMapConsumer.with(mapContent, null, (consumer) => {\\n      const res = consumer.originalPositionFor({\\n        line: lineNo,\\n        column: columnNo,\\n      });\\n      console.log(3, consumer.sourceContentFor(res.source));\\n      setResult(JSON.stringify(res));\\n    });\\n    return () => {};\\n  }, [lineNo, columnNo, url]);\\n  function onClickTest_1() {\\n    throw new Error(\\\"test 1...\\\");\\n  }\\n  return (\\n    <div className=\\\"sourcemap\\\">\\n      <div className=\\\"sourcemap__desc\\\">\\n        <h1>说明</h1>\\n        <p>此页面仅用于测试 source map 功能。</p>\\n      </div>\\n      <Tabs defaultActiveKey=\\\"1\\\" className=\\\"sourcemap__test\\\">\\n        <TabPane tab=\\\"测试用例 1\\\" key=\\\"1\\\">\\n          <div>\\n            <Button type=\\\"primary\\\" className=\\\"sourcemap__test__btn\\\" onClick={onClickTest_1}>\\n              测试\\n            </Button>\\n            {!!result && result}\\n          </div>\\n          <Editor content={readFileContent(\\\"page\\\")} className=\\\"sourcemap__test__editor\\\" startLine={10} endLine={16} />\\n        </TabPane>\\n        <TabPane tab=\\\"测试用例 2\\\" key=\\\"2\\\">\\n          Content of Tab Pane 2\\n        </TabPane>\\n        <TabPane tab=\\\"测试用例 3\\\" key=\\\"3\\\">\\n          Content of Tab Pane 3\\n        </TabPane>\\n      </Tabs>\\n    </div>\\n  );\\n}\\n\\nexport default Sourcemap;\\n\";","import axios from \"@/util/http\";\n\nasync function getFileContentFromUrl(url) {\n  return await axios.get(url);\n}\n\nexport {\n  getFileContentFromUrl\n};","/* eslint-disable no-unused-vars */\nimport \"./index.scss\";\nimport { Tabs, Button } from \"antd\";\nimport Editor from \"./component/Editor\";\nimport { readFileContent } from \"./util\";\nimport { useEffect, useState } from \"react\";\nimport { getFileContentFromUrl } from \"@/util\";\n\nconst { TabPane } = Tabs;\n\nfunction Sourcemap() {\n  console.log(\"render sourcemap\");\n  const [lineNo, setLineNo] = useState(-1);\n  const [columnNo, setColumnNo] = useState(-1);\n  const [url, setUrl] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  useEffect(() => {\n    window.onerror = function (msg, url, lineNo, columnNo) {\n      setLineNo(lineNo);\n      setColumnNo(columnNo);\n      setUrl(url);\n      return false;\n    };\n  }, []);\n  useEffect(async () => {\n    if (lineNo < 0 || columnNo < 0 || !url) {\n      return;\n    }\n    console.log(\"2\", lineNo, columnNo, url);\n    const mapContent = await getFileContentFromUrl(`${url}.map`);\n    sourceMap.SourceMapConsumer.with(mapContent, null, (consumer) => {\n      const res = consumer.originalPositionFor({\n        line: lineNo,\n        column: columnNo,\n      });\n      console.log(3, consumer.sourceContentFor(res.source));\n      setResult(JSON.stringify(res));\n    });\n    return () => {};\n  }, [lineNo, columnNo, url]);\n  function onClickTest_1() {\n    throw new Error(\"test 1...\");\n  }\n  return (\n    <div className=\"sourcemap\">\n      <div className=\"sourcemap__desc\">\n        <h1>说明</h1>\n        <p>此页面仅用于测试 source map 功能。</p>\n      </div>\n      <Tabs defaultActiveKey=\"1\" className=\"sourcemap__test\">\n        <TabPane tab=\"测试用例 1\" key=\"1\">\n          <div>\n            <Button type=\"primary\" className=\"sourcemap__test__btn\" onClick={onClickTest_1}>\n              测试\n            </Button>\n            {!!result && result}\n          </div>\n          <Editor content={readFileContent(\"page\")} className=\"sourcemap__test__editor\" startLine={10} endLine={16} />\n        </TabPane>\n        <TabPane tab=\"测试用例 2\" key=\"2\">\n          Content of Tab Pane 2\n        </TabPane>\n        <TabPane tab=\"测试用例 3\" key=\"3\">\n          Content of Tab Pane 3\n        </TabPane>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default Sourcemap;\n"],"sourceRoot":""}